#! /usr/bin/env python
# -*- coding: utf-8 -*-
import re
import sys
import os
import stat

from snakemake import main
from snakemake.logging import logger
import snakemake.executors


def write_jobscript(self, job, jobscript, **kwargs):
    # only force threads if this is not a group job
    # otherwise we want proper process handling
    use_threads = "--force-use-threads" if not job.is_group() else ""

    envvars = " ".join(
        # quotes values, as envvars values could have spaces
        "{}='{}'".format(var, os.environ[var])
        for var in self.workflow.envvars
    )

    exec_job = self.format_job(
        self.exec_job,
        job,
        _quote_all=True,
        use_threads=use_threads,
        envvars="",
        **kwargs,
    )
    exec_job = " && ".join([envvars, exec_job])
    content = self.format_job(self.jobscript, job, exec_job=exec_job, **kwargs)
    logger.debug("Jobscript:\n{}".format(content))
    with open(jobscript, "w") as f:
        print(content, file=f)
    os.chmod(jobscript, os.stat(jobscript).st_mode | stat.S_IXUSR | stat.S_IRUSR)


snakemake.executors.ClusterExecutor.write_jobscript = write_jobscript

if __name__ == '__main__':
    sys.argv[0] = re.sub(r'(-script\.pyw?|\.exe)?$', '', sys.argv[0])
    sys.exit(main())
